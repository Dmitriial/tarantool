test_run = require('test_run').new()
---
...
engine = test_run:get_cfg('engine')
---
...
box.sql.execute('pragma sql_default_engine=\''..engine..'\'')
---
- rowcount: 0
...
fiber = require('fiber')
---
...
-- This test checks that no leaks of region memory happens during
-- executing SQL queries.
--
-- box.cfg()
box.sql.execute('CREATE TABLE test (id PRIMARY KEY, x INTEGER, y INTEGER)')
---
- rowcount: 1
...
box.sql.execute('INSERT INTO test VALUES (1, 1, 1), (2, 2, 2)')
---
- rowcount: 2
...
box.sql.execute('SELECT x, y, x + y FROM test ORDER BY y')
---
- metadata:
  - name: X
  - name: Y
  - name: x + y
  rows:
  - [1, 1, 2]
  - [2, 2, 4]
...
fiber.info()[fiber.self().id()].memory.used
---
- 29
...
box.sql.execute('SELECT x, y, x + y FROM test ORDER BY y')
---
- metadata:
  - name: X
  - name: Y
  - name: x + y
  rows:
  - [1, 1, 2]
  - [2, 2, 4]
...
box.sql.execute('SELECT x, y, x + y FROM test ORDER BY y')
---
- metadata:
  - name: X
  - name: Y
  - name: x + y
  rows:
  - [1, 1, 2]
  - [2, 2, 4]
...
box.sql.execute('SELECT x, y, x + y FROM test ORDER BY y')
---
- metadata:
  - name: X
  - name: Y
  - name: x + y
  rows:
  - [1, 1, 2]
  - [2, 2, 4]
...
box.sql.execute('SELECT x, y, x + y FROM test ORDER BY y')
---
- metadata:
  - name: X
  - name: Y
  - name: x + y
  rows:
  - [1, 1, 2]
  - [2, 2, 4]
...
fiber.info()[fiber.self().id()].memory.used
---
- 29
...
box.sql.execute('CREATE TABLE test2 (id PRIMARY KEY, a TEXT, b INTEGER)')
---
- rowcount: 1
...
box.sql.execute('INSERT INTO test2 VALUES (1, \'abc\', 1), (2, \'hello\', 2)')
---
- rowcount: 2
...
box.sql.execute('INSERT INTO test2 VALUES (3, \'test\', 3), (4, \'xx\', 4)')
---
- rowcount: 2
...
box.sql.execute('SELECT a, id + 2 * a, b FROM test2 WHERE b < id * 2 ORDER BY a ')
---
- metadata:
  - name: A
  - name: id + 2 * a
  - name: B
  rows:
  - ['abc', 1, 1]
  - ['hello', 2, 2]
  - ['test', 3, 3]
  - ['xx', 4, 4]
...
fiber.info()[fiber.self().id()].memory.used
---
- 56
...
box.sql.execute('SELECT a, id + 2 * b, a FROM test2 WHERE b < id * 2 ORDER BY a ')
---
- metadata:
  - name: A
  - name: id + 2 * b
  - name: A
  rows:
  - ['abc', 3, 'abc']
  - ['hello', 6, 'hello']
  - ['test', 9, 'test']
  - ['xx', 12, 'xx']
...
box.sql.execute('SELECT a, id + 2 * b, a FROM test2 WHERE b < id * 2 ORDER BY a ')
---
- metadata:
  - name: A
  - name: id + 2 * b
  - name: A
  rows:
  - ['abc', 3, 'abc']
  - ['hello', 6, 'hello']
  - ['test', 9, 'test']
  - ['xx', 12, 'xx']
...
box.sql.execute('SELECT a, id + 2 * b, a FROM test2 WHERE b < id * 2 ORDER BY a ')
---
- metadata:
  - name: A
  - name: id + 2 * b
  - name: A
  rows:
  - ['abc', 3, 'abc']
  - ['hello', 6, 'hello']
  - ['test', 9, 'test']
  - ['xx', 12, 'xx']
...
fiber.info()[fiber.self().id()].memory.used
---
- 70
...
box.sql.execute('SELECT x, y + 3 * b, b FROM test2, test WHERE b = x')
---
- metadata:
  - name: X
  - name: y + 3 * b
  - name: B
  rows:
  - [1, 4, 1]
  - [2, 8, 2]
...
box.sql.execute('SELECT x, y + 3 * b, b FROM test2, test WHERE b = x')
---
- metadata:
  - name: X
  - name: y + 3 * b
  - name: B
  rows:
  - [1, 4, 1]
  - [2, 8, 2]
...
box.sql.execute('SELECT x, y + 3 * b, b FROM test2, test WHERE b = x')
---
- metadata:
  - name: X
  - name: y + 3 * b
  - name: B
  rows:
  - [1, 4, 1]
  - [2, 8, 2]
...
fiber.info()[fiber.self().id()].memory.used
---
- 33
...
-- Cleanup
box.sql.execute('DROP TABLE test')
---
- rowcount: 1
...
box.sql.execute('DROP TABLE test2')
---
- rowcount: 1
...
