remote = require('net.box')
---
...
test_run = require('test_run').new()
---
...
engine = test_run:get_cfg('engine')
---
...
box.sql.execute('pragma sql_default_engine=\''..engine..'\'')
---
...
-- gh-3010: COLLATE after LIMIT should throw an error
-- All of these tests should throw error "near "COLLATE": syntax error"
box.sql.execute("SELECT 1 LIMIT 1 COLLATE BINARY;")
---
- error: 'near "COLLATE": syntax error'
...
box.sql.execute("SELECT 1 LIMIT 1 COLLATE BINARY OFFSET 1;")
---
- error: 'near "COLLATE": syntax error'
...
box.sql.execute("SELECT 1 LIMIT 1 OFFSET 1 COLLATE BINARY;")
---
- error: 'near "COLLATE": syntax error'
...
box.sql.execute("SELECT 1 LIMIT 1, 1 COLLATE BINARY;")
---
- error: 'near "COLLATE": syntax error'
...
box.sql.execute("SELECT 1 LIMIT 1 COLLATE BINARY, 1;")
---
- error: 'near "COLLATE": syntax error'
...
-- gh-3052: upper/lower support only default locale
-- For tr-TR result depends on collation
box.sql.execute([[CREATE TABLE tu (descriptor CHAR(50) PRIMARY KEY, letter CHAR)]]);
---
...
box.internal.collation.create('TURKISH', 'ICU', 'tr-TR', {strength='primary'});
---
...
box.sql.execute([[INSERT INTO tu VALUES ('Latin Capital Letter I U+0049','I');]])
---
...
box.sql.execute([[INSERT INTO tu VALUES ('Latin Small Letter I U+0069','i');]])
---
...
box.sql.execute([[INSERT INTO tu VALUES ('Latin Capital Letter I With Dot Above U+0130','İ');]])
---
...
box.sql.execute([[INSERT INTO tu VALUES ('Latin Small Letter Dotless I U+0131','ı');]])
---
...
-- Without collation
box.sql.execute([[SELECT descriptor, upper(letter) AS upper,lower(letter) AS lower FROM tu;]])
---
- - ['Latin Capital Letter I U+0049', 'I', 'i']
  - ['Latin Capital Letter I With Dot Above U+0130', 'İ', 'i̇']
  - ['Latin Small Letter Dotless I U+0131', 'I', 'ı']
  - ['Latin Small Letter I U+0069', 'I', 'i']
...
-- With collation
box.sql.execute([[SELECT descriptor, upper(letter COLLATE "TURKISH") AS upper,lower(letter COLLATE "TURKISH") AS lower FROM tu;]])
---
- - ['Latin Capital Letter I U+0049', 'I', 'ı']
  - ['Latin Capital Letter I With Dot Above U+0130', 'İ', 'i']
  - ['Latin Small Letter Dotless I U+0131', 'I', 'ı']
  - ['Latin Small Letter I U+0069', 'İ', 'i']
...
box.internal.collation.drop('TURKISH')
---
...
-- For de-DE result is actually the same
box.internal.collation.create('GERMAN', 'ICU', 'de-DE', {strength='primary'});
---
...
box.sql.execute([[INSERT INTO tu VALUES ('German Small Letter Sharp S U+00DF','ß');]])
---
...
-- Without collation
box.sql.execute([[SELECT descriptor, upper(letter), letter FROM tu where UPPER(letter) = 'SS';]])
---
- - ['German Small Letter Sharp S U+00DF', 'SS', 'ß']
...
-- With collation
box.sql.execute([[SELECT descriptor, upper(letter COLLATE "GERMAN"), letter FROM tu where UPPER(letter COLLATE "GERMAN") = 'SS';]])
---
- - ['German Small Letter Sharp S U+00DF', 'SS', 'ß']
...
box.internal.collation.drop('GERMAN')
---
...
box.sql.execute(([[DROP TABLE tu]]))
---
...
box.schema.user.grant('guest','read,write,execute', 'universe')
---
...
cn = remote.connect(box.cfg.listen)
---
...
cn:execute('select 1 limit ? collate not_exist', {1})
---
- error: 'Failed to execute SQL statement: near "COLLATE": syntax error'
...
cn:close()
---
...
box.schema.user.revoke('guest', 'read,write,execute', 'universe')
---
...
--
-- gh-3573: Strength in the _collation space
-- Collation without 'strength' option set now works as one with
-- 'strength' set to 'primary'.
--
box.internal.collation.create('c0', 'ICU', 'unicode')
---
...
box.internal.collation.create('c1', 'ICU', 'unicode', {strength='primary'})
---
...
box.internal.collation.create('c2', 'ICU', 'unicode', {strength='secondary'})
---
...
box.internal.collation.create('c5', 'ICU', 'unicode', {strength='identical'})
---
...
box.sql.execute([[create table tc (id int primary key autoincrement, s0 string collate "c0", s1 string collate "c1", s2 string collate "c2", s5 string collate "c5")]])
---
...
box.sql.execute([[insert into tc values (null, 'a', 'a', 'a', 'a')]])
---
...
box.sql.execute([[insert into tc values (null, 'A', 'A', 'A', 'A')]])
---
...
box.sql.execute([[insert into tc values (null, 'á', 'á', 'á', 'á')]])
---
...
box.sql.execute([[insert into tc values (null, 'â', 'â', 'â', 'â')]])
---
...
-- Should be same as the next one.
box.sql.execute([[select * from tc where s0 = 'a']])
---
- - [1, 'a', 'a', 'a', 'a']
  - [2, 'A', 'A', 'A', 'A']
  - [3, 'á', 'á', 'á', 'á']
  - [4, 'â', 'â', 'â', 'â']
...
-- Should return all records.
box.sql.execute([[select * from tc where s1 = 'a']])
---
- - [1, 'a', 'a', 'a', 'a']
  - [2, 'A', 'A', 'A', 'A']
  - [3, 'á', 'á', 'á', 'á']
  - [4, 'â', 'â', 'â', 'â']
...
-- Should return two records.
box.sql.execute([[select * from tc where s2 = 'a']])
---
- - [1, 'a', 'a', 'a', 'a']
  - [2, 'A', 'A', 'A', 'A']
...
-- Should return one record.
box.sql.execute([[select * from tc where s5 = 'a']])
---
- - [1, 'a', 'a', 'a', 'a']
...
box.sql.execute([[drop table tc]])
---
...
box.internal.collation.drop('c0')
---
...
box.internal.collation.drop('c1')
---
...
box.internal.collation.drop('c2')
---
...
box.internal.collation.drop('c5')
---
...
